@using Linguard.Core.Managers
@using Linguard.Core.Configuration
@namespace Linguard.Web.Shared

<div class="row">
    <div class="col-md-6">
        <div class="row mb-2">
            <div class="col">
                <RadzenLabel Text="Target"/>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col-xxl-10">
                <RadzenTextBox class="w-100" Disabled="true" Value="@_configurationManager.LoggingTarget.ToString()"/>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col">
                <RadzenLabel Text="Level"/>
            </div>
        </div>
        <div class="row">
            <div class="col-xxl-10">
                <RadzenDropDown class="w-100" TValue="string" AllowClear="false" Placeholder="Select a log level"
                                Data="@Enum.GetNames(typeof(LogLevel)).Select(s => s.ToString())"
                                Value="@Configuration.Level.ToString()"
                                ValueChanged="l => Configuration.Level = Enum.Parse<LogLevel>(l)"
                                />
            </div>
        </div>
    </div>
</div>

@inject IConfigurationManager _configurationManager

@code {
    [Parameter]
    public ILoggingConfiguration Configuration { get; set; }
}