@using Microsoft.AspNetCore.Identity.EntityFrameworkCore
@inherits LayoutComponentBase
@inject IdentityDbContext _context

@if (!_context.Users.Any()) {
  <RedirectToSignUp/>
  return;
}

<RadzenNotification />

<RadzenLayout>
  <ChildContent>
    <RadzenBody @ref="_body" class="m-md-auto col-xxl-3">
      <ChildContent>
        <RadzenContentContainer Name="main">
          <ErrorBoundary @ref="errorBoundary">
              <ChildContent>
                  @Body
              </ChildContent>
            <ErrorContent>
              <UnhandledError Exception="context"/>
            </ErrorContent>
          </ErrorBoundary>
        </RadzenContentContainer>
      </ChildContent>
    </RadzenBody>
    <RadzenFooter>
      <ChildContent>
        <Footer></Footer>
      </ChildContent>
    </RadzenFooter>
  </ChildContent>
</RadzenLayout>

@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authenticationStateProvider
@inject ILogger<LoginLayout> _logger

@code {
  private RadzenBody _body;
  private ErrorBoundary? errorBoundary;

  protected override void OnParametersSet() {
      errorBoundary?.Recover();
  }

  protected override async Task OnInitializedAsync() {
      var state = await _authenticationStateProvider.GetAuthenticationStateAsync();
      if (state.User.Identity is {IsAuthenticated: true }) {
          _logger.LogDebug("User is already authenticated! Redirecting...");
          _navigationManager.NavigateTo("/");
      }
  }

}
