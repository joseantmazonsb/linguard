@using Linguard.Core.Models
@using System.Security.Claims
@using Linguard.Web.Services
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Options
<div class="d-flex align-items-center justify-content-end">
    <RadzenDropDown TValue="string" AllowClear="false" class="mx-0 mx-lg-3" 
                    Data="@Enum.GetNames(typeof(Style)).Select(s => s.ToString())"
                    Value="Style.Default.ToString()"
                    ValueChanged="OnStyleChanged">
    </RadzenDropDown>
    <RadzenProfileMenu class="text-end" Click="MenuClick">
        <Template>
            <RadzenGravatar Email="@GravatarEmail"/>
        </Template>
        <ChildContent>
            <RadzenProfileMenuItem Text="@GreetingMessage"/>
            <hr class="my-0 mx-1"/>
            <RadzenProfileMenuItem Text="Account" Path="account" Icon="account_circle"/>
            <RadzenProfileMenuItem Text="Log out" Path="/" Icon="logout" Value="logout"/>
        </ChildContent>
    </RadzenProfileMenu>
</div>

@inject ILogger _logger
@inject AuthenticationStateProvider _authenticationStateProvider
@inject IJSRuntime _jsRuntime
@inject IAuthenticationService _authenticationService

@code {

    string? _user;
    string? _email;
    string GreetingMessage => $"Hi, {_user}";
    string GravatarEmail => _email ?? "user@example.com";
    
    async Task OnStyleChanged(string styleName) {
        var style = Enum.Parse<Style>(styleName);
        await _jsRuntime.InvokeVoidAsync("setStylesheet", 
            StyleUtils.GetStylesheet(style));
    }

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        var state = await _authenticationStateProvider.GetAuthenticationStateAsync();
        _user = state.User.Identity?.Name;
    }
    
    private void Logout() {
        _authenticationService.Logout();
    }

    private void MenuClick(RadzenProfileMenuItem args) {
        if (args.Value != "logout") return;
        Logout();
    }

}
