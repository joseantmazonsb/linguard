@page "/client/{id:guid}"
@using Linguard.Core.Utils
@using Linguard.Core.Managers
@using Linguard.Core.Models.Wireguard
@using Linguard.Core.Services
@using Linguard.Core.Configuration

@inject IConfigurationManager _configurationManager
@inject IWireguardService _wireguardService
@inject NotificationService _notificationService
@inject DialogService _dialogService
@inject NavigationManager _navigationManager
@inject IJSRuntime _js


@code {
    const string Title = "Client";
    [Parameter]
    public Guid Id { get; set; }
    
    IWireguardConfiguration Configuration => _configurationManager.Configuration.Wireguard;
    Client? Client => Configuration.Interfaces.SelectMany(i => i.Clients).SingleOrDefault(i => i.Id == Id);
}

<PageTitle>@($"{AssemblyInfo.Product} | {Title}")</PageTitle>

@if (Client == default) {
    <p>Oops, it looks like the client you are looking for does not exist.</p>
    return;
}


<RadzenHeading Text="@Title" class="mb-3"/>
